<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AADYtn0A2LZ9ANi2fQPYtn1H2LZ9rdi2fenYtn392LZ9/9m3ff/RsHn/sJRm/6WLX/+li2D/pYtg/6WL
        YP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/aWLYOmli2CupYtgSKeN
        YQOmjGAApoxgANi2fQDYtn0K2LZ9fti2fezYtn3/2LZ9/9i2ff/Ztn3/0rF5/7OXaP+li1//pYtg/6WL
        YP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WL
        YP+li2DtpYtgf6aMYAqmjGAA2LZ9A9i2fX7Ytn382LZ9/9i2ff/Ytn3/2bZ9/9Kxef+zl2f/pYtf/6WL
        YP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WL
        YP+li2D/pYtg/6WLYP+li2D9pYtgf6eNYQPYtn1H2LZ97Ni2ff/Ytn3/2LZ9/9m2ff/SsXn/s5do/6WL
        X/+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2D/pYtg/6WL
        YP+li2D/pYtg/6WLYP+li2D/pYtg/6WLYP+li2DtpYtgSNi2fa3Ytn3/2LZ9/9i2ff/Ztn3/07F4/7SX
        Zv+mi13/pote/6aLXv+mi17/pote/6aLXv+mi17/pote/6aLXv+mi17/pote/6aLXv+mi17/pote/6aL
        Xv+mi17/pote/6aLXv+mi17/pote/6aLX/+li2D/pYtg/6WLYP+li2Cu2LZ96di2ff/Ytn3/2bZ9/8yy
        g/+fmIX/kIt+/5CMfv+QjH7/kIx+/5CMfv+QjH7/kIx+/5CMfv+QjH7/kIx+/5CMfv+QjH7/kIx+/5CM
        fv+QjH7/kIx+/5CMfv+QjH7/kIx+/5CMfv+RjH3/n4tp/6aLX/+li2D/pYtg/6WLYOnYtn392LZ9/9i2
        ff/at3v/rKmb/1GO2v9Pjtv/UI7b/1CO2/9Qjtv/UI7b/1CO2/9Qjtv/UI7b/1CO2/9Qjtv/UI7b/1CO
        2/9Qjtv/T47b/0+O2/9Pjtv/T47b/0+O2/9Pjtv/T47b/1GO2f+KjIf/p4te/6WLYP+li2D/pYtg/di2
        ff/Ytn3/2LZ9/9q3e/+tqZr/VpHZ/1OP2/9Nit7/TIrf/0yK3/9Mit//TIrf/02K2/9Oi9f/TovX/06L
        1/9Oi9f/TovX/06K1/9RkNz/VJPh/1ST4P9Uk+D/VJPg/1ST4P9Sj9r/Uo7X/4qMhv+ni17/pYtg/6WL
        YP+li2D/2LZ9/9i2ff/Ytn3/2LZ9/8+zg/++r4//raGZ/15ex/9TVM3/U1XN/1NVzf9TVc7/XVqh/2th
        Zv9rYWf/a2Fn/2thZ/9rYWf/amBm/5Sirf+01OP/s9Lh/7PS4f+z0+H/sMvW/5iWiP+Ui3f/oItn/6WL
        X/+li2D/pYtg/6WLYP/Ytn3/2LZ9/9i2ff/Ytn3/2bZ9/9u4e//Hpof/YlHA/1RGyP9VRsj/VUbI/1VG
        yv9iTZH/c1ZG/3NWR/9zVkf/c1ZH/3NWR/9yVUb/p6eg/8/n5P/O5OH/zuTh/87l4v/K29T/rJhx/6aK
        Xf+mi1//pYtg/6WLYP+li2D/pYtg/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2bd8/8Ssiv9de87/TnTY/091
        1/9Pddf/TnTZ/22Hp/+WoWb/laFn/5WgZ/+VoGf/laBn/5WgZf/H0bj/7vb3/+319P/t9fT/7fb1/+bq
        5v+vmnX/pYpe/6WLYP+li2D/pYtg/6WLYP+li2D/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ztnz/w6+L/1qN
        1f9Mid//TYne/02J3v9LiOD/cqGx/6bDc/+lwnT/pcJ0/6XCdP+lwnT/pcJz/9fkw//9/v///P39//z9
        /f/8/v7/8/Lt/7Kcdv+kil7/pYtg/6WLYP+li2D/pYtg/6WLYP/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9m3
        fP/FqIj/YVzE/1NSzP9UU8z/VFPM/1NSzv9kXJf/e2lQ/3tpUP97aVD/e2lQ/3tpUP96aE//rrKm/9bq
        6P/U6Ob/1Ojm/9Xo5//Q3tj/rJhz/6WKXv+li2D/pYtg/6WLYP+li2D/pYtg/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2bd8/8WmiP9iUcD/VEbI/1VGyP9VRsj/VUbK/2FMkv9yVUj/cVVJ/3FVSf9xVUn/cVVJ/3FU
        R/+lpqD/zeXj/8vj4f/L4+H/zOPi/8ja1P+rmHL/pYpe/6WLYP+li2D/pYtg/6WLYP+li2D/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Zt3z/xaaI/2JSwP9URsj/VUfI/1VHyP9VR8r/YU2S/3JWSP9yVkn/clZJ/3JW
        Sf9yVkn/cVVI/6anoP/O5eT/zOPh/8zj4f/M5OL/yNrU/6uYcv+lil7/pYtg/6WLYP+li2D/pYtg/6WL
        YP/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9m3fP/Fpoj/YlLA/1RGyP9VR8j/VUfI/1VHyv9hTZL/clZI/3JW
        Sf9yVkn/clZJ/3JWSf9xVUj/pqeg/87l5P/M4+H/zOPh/8zk4v/I2tT/q5hy/6WKXv+li2D/pYtg/6WL
        YP+li2D/pYtf/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2bd8/8WmiP9iUcD/VEXI/1VGyP9VRsj/VUXK/2FN
        kv9yVkj/clZJ/3JWSf9yVkn/clZJ/3FVSP+mp6D/zuXk/8zj4f/M4+H/zOTi/8ja1P+rmHL/pYpe/6WL
        YP+li2D/pYtg/6WLX/+skWT/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Zt3z/xKmJ/19pyP9RYNH/UmHR/1Jh
        0f9RYdP/X1yX/3JWSP9yVkn/clZJ/3JWSf9yVkn/cVVI/6anoP/O5eT/zOPh/8zj4f/M5OL/yNrU/6uY
        cv+lil7/pYtg/6WLYP+li1//sJRm/82td//Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9m2fP/DsIv/WZLW/0uO
        4f9MjuD/TI7g/0uP4/9cdqD/clZI/3JWSf9yVkn/clZJ/3JWSf9xVUj/paeg/83l4//L4+H/y+Ph/8zj
        4v/I2tT/q5hy/6WKXv+li2D/pYtf/6+UZf/Prnj/2bd9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2bd8/8Sq
        if9ebcr/UGXT/1Fl0v9RZdL/UWbV/19fmP9yVkj/clZJ/3JWSf9yVkn/clZJ/3FVSP+qqqP/1urp/9To
        5v/U6Ob/1ejn/9De2P+smHP/pYpe/6WLX/+vlGX/z654/9m3ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Zt3z/xqaH/2FQwf9SQ8n/U0TJ/1NEyf9SRMv/YUyS/3JWSP9yVkn/clZJ/3JWSf9yVkn/cVRI/8G2
        sP/+/////P39//z9/f/8/v7/8/Lt/7Kcdv+kil7/r5Rl/8+ueP/Zt33/2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/SsYD/l3+i/4Nurf+Eb63/hG+t/4Zxrf+Hb33/dVtK/3RbS/90W0v/dFtL/3Rb
        S/9zWkr/ubOs/+/49//t9fT/7fX0/+329f/m6ub/r5p1/6+TZP/Prnj/2bd9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2bZ9/7+0dv+csG3/nbBt/52w
        bf+dsG3/nbBt/5yvbP+4zrD/zeXk/8zk4v/M5OL/zOTj/8ja1f+1oHj/zq12/9m3ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ztn3/wLd3/6C4
        cP+guHD/oLhw/6C4cP+guHD/oLdv/7LCm//K183/ztvQ/87bz//O29D/zdK//9K1gf/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9q3
        fv+xk2r/dV5M/3ZfTP92X0z/dl9M/3ZfTP91Xkz/m4Jf/8+ygP/XuoX/17mF/9e5hf/XuIH/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff3Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2bd9/8emdf+HaVT/dllL/3ZZS/92WUv/dllL/4ZpU//Eo3L/2bd9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn392LZ96di2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/82seP/BoHH/wJ9x/8Cfcf/BoHH/zax4/9m2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2fenYtn2t2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2bd9/9m3fv/Zt37/2bd+/9m3fv/Zt33/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9rdi2fUfYtn3s2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2fezYtn1H2LZ9A9i2
        fX7Ytn382LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn382LZ9fti2
        fQPYtn0A2LZ9Cti2fX7Ytn3s2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ97Ni2
        fX7Ytn0K2LZ9ANi2fQDYtn0A2LZ9A9i2fUfYtn2t2LZ96di2ff3Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2
        ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn3/2LZ9/9i2ff/Ytn392LZ96di2
        fa3Ytn1H2LZ9A9i2fQDYtn0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>